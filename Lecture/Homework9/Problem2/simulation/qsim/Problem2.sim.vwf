/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 0.0;
	GRID_DUTY_CYCLE = 50;
}




SIGNAL("Clock")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Dice1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Dice1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Dice1";
}

SIGNAL("Dice1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Dice1";
}

SIGNAL("Dice1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Dice1";
}

SIGNAL("Dice2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Dice2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Dice2";
}

SIGNAL("Dice2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Dice2";
}

SIGNAL("Dice2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Dice2";
}

SIGNAL("DIG0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DIG0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DIG0";
}

SIGNAL("DIG0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DIG0";
}

SIGNAL("DIG0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DIG0";
}

SIGNAL("DIG0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DIG0";
}

SIGNAL("DIG1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DIG1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DIG1";
}

SIGNAL("DIG1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DIG1";
}

SIGNAL("DIG1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DIG1";
}

SIGNAL("DIG1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DIG1";
}

SIGNAL("Resetn")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Stop1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Stop2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

TRANSITION_LIST("Clock")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 25.0;
	}
}
TRANSITION_LIST("Dice1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3.772;
		LEVEL 0 FOR 527.677;
		LEVEL 1 FOR 149.652;
		LEVEL 0 FOR 318.899;
	}
}
TRANSITION_LIST("Dice1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 4.988;
		LEVEL 0 FOR 27.512;
		LEVEL 1 FOR 84.916;
		LEVEL 0 FOR 65.084;
		LEVEL 1 FOR 349.951;
		LEVEL 0 FOR 100.049;
		LEVEL 1 FOR 49.658;
		LEVEL 0 FOR 317.842;
	}
}
TRANSITION_LIST("Dice1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3.787;
		LEVEL 1 FOR 27.346;
		LEVEL 0 FOR 50.214;
		LEVEL 1 FOR 99.786;
		LEVEL 0 FOR 50.214;
		LEVEL 1 FOR 299.786;
		LEVEL 0 FOR 50.214;
		LEVEL 1 FOR 49.786;
		LEVEL 0 FOR 49.823;
		LEVEL 1 FOR 319.044;
	}
}
TRANSITION_LIST("Dice2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 4.214;
		LEVEL 0 FOR 277.572;
		LEVEL 1 FOR 499.634;
		LEVEL 0 FOR 200.366;
		LEVEL 1 FOR 18.214;
	}
}
TRANSITION_LIST("Dice2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 4.089;
		LEVEL 0 FOR 27.582;
		LEVEL 1 FOR 84.847;
		LEVEL 0 FOR 65.153;
		LEVEL 1 FOR 99.889;
		LEVEL 0 FOR 100.111;
		LEVEL 1 FOR 399.597;
		LEVEL 0 FOR 100.403;
		LEVEL 1 FOR 99.889;
		LEVEL 0 FOR 18.44;
	}
}
TRANSITION_LIST("Dice2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 4.368;
		LEVEL 1 FOR 27.348;
		LEVEL 0 FOR 50.212;
		LEVEL 1 FOR 99.788;
		LEVEL 0 FOR 50.212;
		LEVEL 1 FOR 49.788;
		LEVEL 0 FOR 50.212;
		LEVEL 1 FOR 49.788;
		LEVEL 0 FOR 399.841;
		LEVEL 1 FOR 100.159;
		LEVEL 0 FOR 50.212;
		LEVEL 1 FOR 49.788;
		LEVEL 0 FOR 18.284;
	}
}
TRANSITION_LIST("DIG0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3.791;
		LEVEL 0 FOR 528.226;
		LEVEL 1 FOR 99.878;
		LEVEL 0 FOR 368.105;
	}
}
TRANSITION_LIST("DIG0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 4.492;
		LEVEL 0 FOR 77.676;
		LEVEL 1 FOR 35.059;
		LEVEL 0 FOR 114.941;
		LEVEL 1 FOR 299.507;
		LEVEL 0 FOR 468.325;
	}
}
TRANSITION_LIST("DIG0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 4.473;
		LEVEL 0 FOR 27.416;
		LEVEL 1 FOR 50.077;
		LEVEL 0 FOR 99.923;
		LEVEL 1 FOR 50.077;
		LEVEL 0 FOR 100.936;
		LEVEL 1 FOR 198.624;
		LEVEL 0 FOR 200.562;
		LEVEL 1 FOR 49.593;
		LEVEL 0 FOR 150.372;
		LEVEL 1 FOR 67.947;
	}
}
TRANSITION_LIST("DIG0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 4.912;
		LEVEL 0 FOR 277.34;
		LEVEL 1 FOR 50.22;
		LEVEL 0 FOR 49.78;
		LEVEL 1 FOR 149.876;
		LEVEL 0 FOR 50.059;
		LEVEL 1 FOR 49.941;
		LEVEL 0 FOR 49.946;
		LEVEL 1 FOR 50.054;
		LEVEL 0 FOR 150.124;
		LEVEL 1 FOR 50.22;
		LEVEL 0 FOR 49.78;
		LEVEL 1 FOR 17.748;
	}
}
TRANSITION_LIST("DIG1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}
TRANSITION_LIST("DIG1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}
TRANSITION_LIST("DIG1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}
TRANSITION_LIST("DIG1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 4.387;
		LEVEL 0 FOR 627.448;
		LEVEL 1 FOR 150.065;
		LEVEL 0 FOR 218.1;
	}
}
TRANSITION_LIST("Resetn")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 110.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 690.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 130.0;
	}
}
TRANSITION_LIST("Stop1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 250.0;
	}
}
TRANSITION_LIST("Stop2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 375.0;
		LEVEL 1 FOR 375.0;
		LEVEL 0 FOR 250.0;
	}
}


DISPLAY_LINE
{
	CHANNEL = "Clock";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Stop1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Stop2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Resetn";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Dice1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
	CHILDREN = 5, 6, 7;
}

DISPLAY_LINE
{
	CHANNEL = "Dice1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "Dice1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "Dice1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "Dice2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 8;
	TREE_LEVEL = 0;
	CHILDREN = 9, 10, 11;
}

DISPLAY_LINE
{
	CHANNEL = "Dice2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "Dice2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "Dice2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "DIG0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
	CHILDREN = 13, 14, 15, 16;
}

DISPLAY_LINE
{
	CHANNEL = "DIG0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "DIG0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "DIG0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "DIG0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "DIG1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 17;
	TREE_LEVEL = 0;
	CHILDREN = 18, 19, 20, 21;
}

DISPLAY_LINE
{
	CHANNEL = "DIG1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "DIG1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "DIG1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "DIG1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 17;
}
TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
